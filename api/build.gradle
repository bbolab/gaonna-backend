plugins{
    id 'com.google.cloud.tools.jib'
}
jib {
    allowInsecureRegistries = true
    from {
        image = "harbor.gaonna.tech/base_docker_images/openjdk:11"
    }
    to {
        image = "gaonna_platform/api:latest"
    }
    container {
        mainClass = 'com.bbolab.gaonna.api.ApiApplication'
    }
}
group = 'com.bbolab.gaonna.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://repo.spring.io/milestone'
    }
}

ext {
    set('springCloudVersion', "2020.0.0")
    set('springBootAdminVersion', "2.3.1")
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.1'

    // spring swagger2
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    // spring security oauth2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // for Geometry type
    compile group: 'org.locationtech.jts', name: 'jts-core', version: '1.15.1'

    // parse bbox string
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

    // lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // model mapper
    implementation 'org.modelmapper:modelmapper:3.0.0'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile "org.testcontainers:mysql:1.16.3"

    // jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    // project dependency
    implementation project(":core")

    // for annotation processor
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = true
}
