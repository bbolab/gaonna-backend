#!groovy

pipeline {
    agent any
    environment {
        GIT_STATE = "${env.JOB_NAME == 'gaonna-backend-deploy' ? 'deploy' : 'else'}"
    }
    tools {
        jdk 'openjdk-11'
    }
    stages{
        stage('Git Checkout'){
            steps{
                script{
                    env.GIT_COMMIT = checkout scm
                    env.GIT_TAG = sh(script: "git name-rev --tags --name-only ${env.GIT_COMMIT}", returnStdout: true)?.trim()
                    sh "echo ${env.GIT_STATE} GIT_COMMIT : ${env.GIT_COMMIT}"
                }
            }
        }
        stage('Gradlew Build'){
            options{
                retry(2)
            }
            steps{
                script{
                    sh """
                    chmod +x ./gradlew
                    ./gradlew build
                    """
                }
            }
            post{
                failure{
                    sh "./gradlew --stop"
                    error "Gradlew Build Fail"
                }
            }
        }
        stage('Test'){
            options{
                retry(2)
            }
            steps{
                script{
                    sh "./gradlew test"
                    sh "./gradlew check"
                    sh "echo 'generating coverage report'"
                    sh "./gradlew codeCoverageReport"
                    sh "echo 'send it to codecov'"
                    codecov_stdout = sh(script:"curl -s https://codecov.io/bash | bash", returnStdout: true)
                    echo codecov_stdout
                    if((codecov_stdout =~ /(.*)\n404\n(.*)/).find(0)){
                        error "Codecov report publish fail(404)"
                    }
                }
            }
            post{
                failure{
                    sh "./gradlew --stop"
                    error "Test Fail"
                }
            }
        }
        stage('JIB Docker images'){
            options{
                retry(2)
            }
            steps{
                script{
                    docker.withRegistry(HARBOR_REPOSITORY, HARBOR_CREDENTIAL){
                        sh """
                        ./gradlew jibDockerBuild
                        """
                    }

                }
            }
            post{
                failure{
                    sh "./gradlew --stop"
                    error "JIB Docker images"
                }
            }
        }
        stage('Push image to Harbor'){
            when{
                expression{ env.GIT_STATE == 'deploy' }
            }
            steps{
                script{
                    docker.withRegistry(HARBOR_REPOSITORY, HARBOR_CREDENTIAL){
                        docker.image('gaonna_platform/admin:latest').push("${env.GIT_COMMIT}")
                        docker.image('gaonna_platform/api:latest').push("${env.GIT_COMMIT}")
                    }
                }
            }
        }
        stage('Update Manifest'){
            when{
                expression{ env.GIT_STATE == 'deploy'}
            }
            steps{
                dir('gaonna-manifest'){
                    git branch: 'main', credentialsId: 'uwp-gaonna-sa-secret-text', url: 'https://github.com/bbolab/gaonna-manifest'
                    dir('kustomize/admin/overlays/alpha'){
                        sh "kustomize edit set image admin=harbor.gaonna.tech/gaonna_platform/admin:$GIT_COMMIT"
                    }
                    dir('kustomize/api/overlays/alpha'){
                        sh "kustomize edit set image api=harbor.gaonna.tech/gaonna_platform/api:$GIT_COMMIT"
                    }
                    script{
                        sh "echo $env.GIT_TAG"
                        if(env.GIT_TAG == 'real'){
                            dir('kustomize/admin/overlays/real'){
                                sh "kustomize edit set image admin=harbor.gaonna.tech/gaonna_platform/admin:$GIT_COMMIT"
                            }
                            dir('kustomize/api/overlays/real'){
                                sh "kustomize edit set image api=harbor.gaonna.tech/gaonna_platform/api:$GIT_COMMIT"
                            }
                        }
                    }
                    sh """
                    if git status | grep -q "nothing to commit"; then echo "there is no change"; else git add -A && git commit -m '$GIT_COMMIT' && git push -u origin main; fi
                    """
                }
            }
        }
    }
}
